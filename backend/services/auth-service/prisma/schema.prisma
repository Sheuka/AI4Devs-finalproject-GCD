// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  email         String         @unique
  password      String
  firstName     String
  lastName      String
  role          UserRole       @default(CLIENT)
  isActive      Boolean        @default(true)
  lastLogin     DateTime?
  phoneNumber   String?
  profilePicture String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  loginAttempts LoginAttempt[]
  passwordResets PasswordReset[]
}

model LoginAttempt {
  id            String    @id @default(uuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  ipAddress     String
  userAgent     String
  successful    Boolean   @default(false)
  failureReason String?
  createdAt     DateTime  @default(now())

  @@index([userId])
}

model PasswordReset {
  id        String    @id @default(uuid())
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  token     String    @unique
  expiresAt DateTime
  used      Boolean   @default(false)
  createdAt DateTime  @default(now())

  @@index([userId])
  @@index([token])
}

enum UserRole {
  CLIENT
  PROFESSIONAL
  ADMIN
}
